import type { AxiosRequestConfig } from 'axios';
import type { PathDetails } from '../types/common.types';
import type * as ValidTypes from '../types/valid.types';
export declare const importJsModuleSync: (modulePath: string) => any;
export declare const importJsonModuleSync: (modulePath: string) => any;
export declare const requireFile: (directoryPath: string, { exclude, recursive, isList, onlyIndex, }?: {
    exclude?: string[] | undefined;
    recursive?: boolean | undefined;
    isList?: boolean | undefined;
    onlyIndex?: boolean | undefined;
}) => any;
export declare const getObject: (files: PathDetails[]) => object;
export declare const getList: (files: PathDetails[]) => any[];
export declare const getFilesList: (directoryPath: string, { exclude, recursive, onlyIndex }?: {
    exclude?: string[] | undefined;
    recursive?: boolean | undefined;
    onlyIndex?: boolean | undefined;
}) => PathDetails[];
export declare const getStats: (directoryPath: string) => PathDetails | undefined;
export declare const getFileData: (filePath: string) => Promise<ValidTypes.FetchData>;
export declare const getUrlData: (request: AxiosRequestConfig) => Promise<ValidTypes.FetchData>;
export declare const parseUrl: (relativeUrl?: string, root?: string) => string;
export declare const requireData: (data?: any, { root, isList, onlyIndex, recursive, exclude, }?: {
    exclude?: string[] | undefined;
    root?: string | undefined;
    isList?: boolean | undefined;
    onlyIndex?: boolean | undefined;
    recursive?: boolean | undefined;
}) => any;
