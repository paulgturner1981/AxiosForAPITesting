"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const compression_1 = __importDefault(require("compression"));
const cookie_parser_1 = __importDefault(require("cookie-parser"));
const cors_1 = __importDefault(require("cors"));
const express_1 = __importDefault(require("express"));
const fs_1 = __importDefault(require("fs"));
const method_override_1 = __importDefault(require("method-override"));
const morgan_1 = __importDefault(require("morgan"));
const response_time_1 = __importDefault(require("response-time"));
const Defaults = __importStar(require("../defaults"));
exports.default = (opts) => {
    const _opts = Object.assign(Object.assign({}, Defaults.Config), opts);
    const arr = [];
    // gives response time in Response Header X-Response-Time
    arr.push((0, response_time_1.default)());
    // Serve static files
    if (fs_1.default.existsSync(_opts.static)) {
        const router = express_1.default.Router();
        router.use(_opts.base, express_1.default.static(_opts.static));
        arr.push(router);
    }
    // Compress all requests
    if (!_opts.noGzip) {
        arr.push((0, compression_1.default)());
    }
    // Enable CORS for all the requests, including static files
    if (!_opts.noCors) {
        arr.push((0, cors_1.default)({
            credentials: true,
            origin: true,
        }));
    }
    // Logger
    if (_opts.logger) {
        arr.push((0, morgan_1.default)('dev', {
            skip: (req) => { var _a; return process.env.NODE_ENV === 'test' || ((_a = req.originalUrl) === null || _a === void 0 ? void 0 : _a.includes('/_assets/')) || false; },
        }));
    }
    // No cache for IE
    // https://support.microsoft.com/en-us/kb/234067
    if (_opts.noCache) {
        arr.push((_req, res, next) => {
            res.set('Cache-Control', 'no-cache, private, no-store, must-revalidate, max-stale=0, post-check=0, pre-check=0');
            res.set('Pragma', 'no-cache');
            res.set('Expires', '-1');
            next();
        });
    }
    // Read-only
    if (_opts.readOnly) {
        arr.push((req, res, next) => {
            if (req.method === 'GET') {
                next(); // Continue
            }
            else {
                res.sendStatus(403); // Forbidden
            }
        });
    } // Add middlewares
    // Body Parser
    if (_opts.bodyParser) {
        arr.push(express_1.default.urlencoded({ extended: true }));
        arr.push(express_1.default.json({ limit: '10mb' }));
    }
    // Cookie parser
    if (_opts.cookieParser) {
        arr.push((0, cookie_parser_1.default)());
    }
    arr.push((0, method_override_1.default)());
    return arr;
};
